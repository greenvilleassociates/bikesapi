{
  "openapi": "3.0.4",
  "info": {
    "title": "dirtbike.api",
    "version": "1.0"
  },
  "paths": {
    "/api/Apilog": {
      "get": {
        "tags": [
          "Apilog"
        ],
        "operationId": "GetAllApilogs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Apilog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apilog"
        ],
        "operationId": "CreateApilog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Apilog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Apilog/{id}": {
      "get": {
        "tags": [
          "Apilog"
        ],
        "operationId": "GetApilogById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Apilog"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Apilog"
        ],
        "operationId": "UpdateApilog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Apilog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Apilog"
        ],
        "operationId": "DeleteApilog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parks": {
      "get": {
        "tags": [
          "Park"
        ],
        "operationId": "GetAllParkss",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Park"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Park"
        ],
        "operationId": "CreateParks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Park"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Parks/{id}": {
      "get": {
        "tags": [
          "Park"
        ],
        "operationId": "GetParksById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Park"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Park"
        ],
        "operationId": "UpdateParks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Park"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Park"
        ],
        "operationId": "DeleteParks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Template": {
      "get": {
        "tags": [
          "Template"
        ],
        "operationId": "GetAllTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Template"
        ],
        "operationId": "CreateTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Template/{id}": {
      "get": {
        "tags": [
          "Template"
        ],
        "operationId": "GetTemplateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Template"
        ],
        "operationId": "UpdateTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Template"
        ],
        "operationId": "DeleteTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Userlog": {
      "get": {
        "tags": [
          "Userlog"
        ],
        "operationId": "GetAllUserlogs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Userlog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Userlog"
        ],
        "operationId": "CreateUserlog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Userlog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Userlog/{id}": {
      "get": {
        "tags": [
          "Userlog"
        ],
        "operationId": "GetUserlogById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Userlog"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Userlog"
        ],
        "operationId": "UpdateUserlog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Userlog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Userlog"
        ],
        "operationId": "DeleteUserlog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Apilog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "apiname": {
            "type": "string",
            "nullable": true
          },
          "apinumber": {
            "type": "string",
            "nullable": true
          },
          "eptype": {
            "type": "string",
            "nullable": true
          },
          "hashid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameterlist": {
            "type": "string",
            "nullable": true
          },
          "apiresult": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Park": {
        "type": "object",
        "properties": {
          "parkId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "trailLengthMiles": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dayPassPriceUsd": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Template": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Userlog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "hashid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hashedpassword": {
            "type": "string",
            "nullable": true
          },
          "loginstatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}